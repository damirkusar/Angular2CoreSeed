<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="c:\temp\internal-nlog.txt">

  <!-- define various log targets -->
  <targets>
    <!-- write logs to file -->
    <target xsi:type="File" name="allFile" fileName="${var:configDir}\nlog-all-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|${message} ${exception}" />

    <target xsi:type="File" name="ownFile" fileName="${var:configDir}\nlog-own-${shortdate}.log"
             layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|  ${message} ${exception}" />

    <target xsi:type="Null" name="blackhole" />

    <target name="database" xsi:type="Database">
      <connectionString>${var:connectionString}</connectionString>

<!--
  Remarks:
    The appsetting layouts require the NLog.Extended assembly.
    The aspnet-* layouts require the NLog.Web assembly.
    The Application value is determined by an AppName appSetting in Web.config.
    The ${var:connectionString} variable is configured in startup.cs file.
    The create Model.Log script in the comment below must be manually executed.

  Script for creating the Model.Log table.

  SET ANSI_NULLS ON
  SET QUOTED_IDENTIFIER ON
  CREATE TABLE [Model].[Log] (
      [Id] [int] IDENTITY(1,1) NOT NULL,
      [Logged] [datetime] NOT NULL,
      [Host] [varchar](150) NOT NULL,
      [AppName] [varchar](150) NOT NULL,
      [Level] [varchar](50) NOT NULL,
      [Message] [varchar](512) NOT NULL,
      [Logger] [varchar](250) NULL,
      [Callsite] [varchar](512) NULL,
      [Exception] [varchar](max) NULL,
    CONSTRAINT [PK_Model.Log] PRIMARY KEY CLUSTERED ([Id] ASC)
      WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
  ) ON [PRIMARY]
-->

      <commandText>
        insert into Model.Log (
        Logged, Host, AppName, Level, Message, Logger, CallSite, Exception
        ) values (
        @Logged, @Host, @AppName, @Level, @Message, @Logger, @Callsite, @Exception
        );
      </commandText>

      <parameter name="@logged" layout="${date}" />
      <parameter name="@AppName" layout="Customer Portal V3" />
      <parameter name="@Host" layout="${machinename}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@message" layout="${message}" />

      <parameter name="@logger" layout="${logger}" />
      <parameter name="@callSite" layout="${callsite:includeSourcePath=false}" />
      <parameter name="@exception" layout="${exception:tostring}" />
    </target>
  </targets>

  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allFile" />

    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
    <logger name="AspNet.*" minlevel="Trace" writeTo="blackhole" final="true" />

    <logger name="*" minlevel="Trace" writeTo="ownFile" />
    <logger name="*" minlevel="Trace" writeTo="database" />
  </rules>
</nlog>